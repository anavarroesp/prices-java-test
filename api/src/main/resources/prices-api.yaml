openapi: 3.0.3
info:
  title: Inditex Prices API
  version: 1.0.0
  
tags:
  - name: Prices
    description: Prices API for Inditex java test
    
paths:
  /api/v1/prices/brands/{brandId}/products/{productId}/applicable-price:
    get:
      tags:
        - Prices
      operationId: getApplicablePrice
      summary: Obtain the applicable price detail for a product filtered by date
      parameters:
        - name: brandId
          in: path
          required: true
          description: Brand identifier
          schema:
            type: string
            format: UUID
          example: "1c3173e8-fd3e-4228-bfe1-98b86c3e75b1"
        - name: productId
          in: path
          required: true
          description: Product identifier
          schema:
            type: string
            format: UUID
          example: "1c3173e8-fd3e-4228-bfe1-98b86c3e75b1"
        - name: applicationDate
          in: query
          required: true
          description: Date when the price is applied
          schema:
            type: string
            format: date-time
          example: "2020-06-14T10:00:00Z"
      responses:
        '200':
          description: Applicable price detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceDetail'
        '400':
          description: Bad request. One or more parameters has an invalid value.
          $ref: "#/components/responses/BadRequest"
        "404":
          description: Resource not found or not records found
          $ref: "#/components/responses/NotFound"
        "500":
            $ref: "#/components/responses/InternalServerError"
components:
  schemas:
    PriceDetail:
      type: object
      description: A Price Details object for a product
      properties:
        productId:
          type: string
          format: UUID
        brandId:
          type: string
          format: UUID
        priceCode:
          type: integer
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        price:
          type: number
          format: double
      example:
        productId: "1c3173e8-fd3e-4228-bfe1-98b86c3e75b1"
        brandId: "1c3173e8-fd3e-4228-bfe1-98b86c3e75b1"
        priceCode: 1
        startDate: "2020-06-14T00:00:00Z"
        endDate: "2020-12-31T23:59:59Z"
        price: 35.50
    ProblemDetail:
      description: A problemDetail Details object
      type: object
      additionalProperties: true
      properties:
        title:
          type: string
          maxLength: 500
          description: A short summary of the problem
          example: Internal Server Error
        status:
          type: integer
          format: int32
          description: The HTTP Status Code generated by the origin server for this occurrence of the problem
          minimum: 400
          maximum: 600
          exclusiveMaximum: true
          example: 500
        detail:
          type: string
          maxLength: 5000
          description: A human-readable explanation specific to this occurrence of the problem
          example: Requested service not available
        instance:
          type: string
          maxLength: 2000
          description: URI reference that identifies the specific occurrence of the problem
          example: /prices
      example:
        title: Bad Request
        status: 400
        detail: Requested service not available
        instance: /prices
  responses:
    BadRequest:
      description: 'Bad request. One or more parameters has an invalid value.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: about:blank
            title: Bad Request
            status: 400
            detail: The request could not be understood by the server due to malformed syntax
            instance: /prices
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: about:blank
            title: Not Found
            status: 404
            detail: The requested resource could not be found
            instance: /prices
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: about:blank
            title: Internal Server Error
            status: 500
            detail: The server encountered an unexpected condition
            instance: /iopcljava/v1/product


